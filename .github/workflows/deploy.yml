name: deploy bms
on: [push]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: test
        run: cat pom.xml
      - name: Build with Maven
        run: mvn -DskipTests=true package
      - name: Build Docker Image
        run: docker build --file Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/bms:latest .
      - name: Docker Login
        run: docker login -u  ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/bms:latest
      - name: Stop the Previous Services
        uses: appleboy/ssh-action@v0.1.9
        env:
          WORKER_DIR: ${{ secrets.WORKER_DIR }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script_stop: true
          envs: WORKER_DIR
          script: |
            cd $WORKER_DIR
            docker compose down
      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "ci/docker-compose.yml,scripts/db/bms.sql"
          target: ${{ secrets.WORKER_DIR }}
          strip_components: 1
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.9
        env:
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          WORKER_DIR: ${{ secrets.WORKER_DIR }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          envs: MYSQL_PASSWORD,WORKER_DIR
          script_stop: true
          script: |
            cd $WORKER_DIR
            echo -e "MYSQL_ROOT_PASSWORD=$MYSQL_PASSWORD\n" > .env      
            docker compose --env-file .env up -d
