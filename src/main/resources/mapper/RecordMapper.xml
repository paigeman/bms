<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ncu.bms.dao.RecordMapper">
  <resultMap id="BaseResultMap" type="com.ncu.bms.bean.Record">
    <id column="record_id" jdbcType="INTEGER" property="record_id" />
    <result column="record_book" jdbcType="VARCHAR" property="record_book" />
    <result column="record_reader" jdbcType="VARCHAR" property="record_reader" />
    <result column="record_admin" jdbcType="VARCHAR" property="record_admin" />
    <result column="record_borrow" jdbcType="TIMESTAMP" property="record_borrow" />
    <result column="record_return" jdbcType="TIMESTAMP" property="record_return" />
    <result column="record_is_return" jdbcType="INTEGER" property="record_is_return" />
    <result column="record_is_overtime" jdbcType="INTEGER" property="record_is_overtime" />
    <result column="record_is_lost" jdbcType="INTEGER" property="record_is_lost" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    record_id, record_book, record_reader, record_admin, record_borrow, record_return, 
    record_is_return, record_is_overtime, record_is_lost
  </sql>
  <select id="selectByExample" parameterType="com.ncu.bms.bean.RecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <!--自定义-->
  <select id="selectByRecordSelective" parameterType="com.ncu.bms.bean.Record" resultMap="BaseResultMap">
    select * from record
    <where>
      <if test="record_id != null">
        and record_id = #{book_No,jdbcType=VARCHAR}
      </if>
      <if test="record_book != null">
        and record_book = #{record_book,jdbcType=VARCHAR}
      </if>
      <if test="record_reader != null">
        and record_reader = #{record_reader,jdbcType=VARCHAR}
      </if>
      <if test="record_is_return != null">
        and record_is_return = #{record_is_return,jdbcType=INTEGER}
      </if>
      <if test="record_is_overtime != null">
        and record_is_overtime = #{record_is_overtime,jdbcType=INTEGER}
      </if>
      <if test="record_is_lost != null">
        and record_is_lost = #{record_is_lost,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from record
    where record_id = #{record_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from record
    where record_id = #{record_id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ncu.bms.bean.RecordExample">
    delete from record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ncu.bms.bean.Record">
    insert into record (record_id, record_book, record_reader, 
      record_admin, record_borrow, record_return, 
      record_is_return, record_is_overtime, record_is_lost
      )
    values (#{record_id,jdbcType=INTEGER}, #{record_book,jdbcType=VARCHAR}, #{record_reader,jdbcType=VARCHAR}, 
      #{record_admin,jdbcType=VARCHAR}, #{record_borrow,jdbcType=TIMESTAMP}, #{record_return,jdbcType=TIMESTAMP}, 
      #{record_is_return,jdbcType=INTEGER}, #{record_is_overtime,jdbcType=INTEGER}, #{record_is_lost,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ncu.bms.bean.Record">
    insert into record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="record_id != null">
        record_id,
      </if>
      <if test="record_book != null">
        record_book,
      </if>
      <if test="record_reader != null">
        record_reader,
      </if>
      <if test="record_admin != null">
        record_admin,
      </if>
      <if test="record_borrow != null">
        record_borrow,
      </if>
      <if test="record_return != null">
        record_return,
      </if>
      <if test="record_is_return != null">
        record_is_return,
      </if>
      <if test="record_is_overtime != null">
        record_is_overtime,
      </if>
      <if test="record_is_lost != null">
        record_is_lost,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="record_id != null">
        #{record_id,jdbcType=INTEGER},
      </if>
      <if test="record_book != null">
        #{record_book,jdbcType=VARCHAR},
      </if>
      <if test="record_reader != null">
        #{record_reader,jdbcType=VARCHAR},
      </if>
      <if test="record_admin != null">
        #{record_admin,jdbcType=VARCHAR},
      </if>
      <if test="record_borrow != null">
        #{record_borrow,jdbcType=TIMESTAMP},
      </if>
      <if test="record_return != null">
        #{record_return,jdbcType=TIMESTAMP},
      </if>
      <if test="record_is_return != null">
        #{record_is_return,jdbcType=INTEGER},
      </if>
      <if test="record_is_overtime != null">
        #{record_is_overtime,jdbcType=INTEGER},
      </if>
      <if test="record_is_lost != null">
        #{record_is_lost,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ncu.bms.bean.RecordExample" resultType="java.lang.Long">
    select count(*) from record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update record
    <set>
      <if test="record.record_id != null">
        record_id = #{record.record_id,jdbcType=INTEGER},
      </if>
      <if test="record.record_book != null">
        record_book = #{record.record_book,jdbcType=VARCHAR},
      </if>
      <if test="record.record_reader != null">
        record_reader = #{record.record_reader,jdbcType=VARCHAR},
      </if>
      <if test="record.record_admin != null">
        record_admin = #{record.record_admin,jdbcType=VARCHAR},
      </if>
      <if test="record.record_borrow != null">
        record_borrow = #{record.record_borrow,jdbcType=TIMESTAMP},
      </if>
      <if test="record.record_return != null">
        record_return = #{record.record_return,jdbcType=TIMESTAMP},
      </if>
      <if test="record.record_is_return != null">
        record_is_return = #{record.record_is_return,jdbcType=INTEGER},
      </if>
      <if test="record.record_is_overtime != null">
        record_is_overtime = #{record.record_is_overtime,jdbcType=INTEGER},
      </if>
      <if test="record.record_is_lost != null">
        record_is_lost = #{record.record_is_lost,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update record
    set record_id = #{record.record_id,jdbcType=INTEGER},
      record_book = #{record.record_book,jdbcType=VARCHAR},
      record_reader = #{record.record_reader,jdbcType=VARCHAR},
      record_admin = #{record.record_admin,jdbcType=VARCHAR},
      record_borrow = #{record.record_borrow,jdbcType=TIMESTAMP},
      record_return = #{record.record_return,jdbcType=TIMESTAMP},
      record_is_return = #{record.record_is_return,jdbcType=INTEGER},
      record_is_overtime = #{record.record_is_overtime,jdbcType=INTEGER},
      record_is_lost = #{record.record_is_lost,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ncu.bms.bean.Record">
    update record
    <set>
      <if test="record_book != null">
        record_book = #{record_book,jdbcType=VARCHAR},
      </if>
      <if test="record_reader != null">
        record_reader = #{record_reader,jdbcType=VARCHAR},
      </if>
      <if test="record_admin != null">
        record_admin = #{record_admin,jdbcType=VARCHAR},
      </if>
      <if test="record_borrow != null">
        record_borrow = #{record_borrow,jdbcType=TIMESTAMP},
      </if>
      <if test="record_return != null">
        record_return = #{record_return,jdbcType=TIMESTAMP},
      </if>
      <if test="record_is_return != null">
        record_is_return = #{record_is_return,jdbcType=INTEGER},
      </if>
      <if test="record_is_overtime != null">
        record_is_overtime = #{record_is_overtime,jdbcType=INTEGER},
      </if>
      <if test="record_is_lost != null">
        record_is_lost = #{record_is_lost,jdbcType=INTEGER},
      </if>
    </set>
    where record_id = #{record_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ncu.bms.bean.Record">
    update record
    set record_book = #{record_book,jdbcType=VARCHAR},
      record_reader = #{record_reader,jdbcType=VARCHAR},
      record_admin = #{record_admin,jdbcType=VARCHAR},
      record_borrow = #{record_borrow,jdbcType=TIMESTAMP},
      record_return = #{record_return,jdbcType=TIMESTAMP},
      record_is_return = #{record_is_return,jdbcType=INTEGER},
      record_is_overtime = #{record_is_overtime,jdbcType=INTEGER},
      record_is_lost = #{record_is_lost,jdbcType=INTEGER}
    where record_id = #{record_id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.ncu.bms.bean.RecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>